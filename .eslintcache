[{"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx":"4","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx":"5","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"6","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"7","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"8","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx":"9","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx":"10","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts":"11","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts":"12","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"13","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"14","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx":"16","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts":"17","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts":"18","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\AuthContext.tsx":"19","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"20","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"21"},{"size":198,"mtime":1609203584151,"results":"22","hashOfConfig":"23"},{"size":182,"mtime":1609203775868,"results":"24","hashOfConfig":"23"},{"size":463,"mtime":1609203115405,"results":"25","hashOfConfig":"23"},{"size":198,"mtime":1609203584151,"results":"26","hashOfConfig":"27"},{"size":427,"mtime":1610073332672,"results":"28","hashOfConfig":"27"},{"size":463,"mtime":1609203115405,"results":"29","hashOfConfig":"27"},{"size":2179,"mtime":1610072711752,"results":"30","hashOfConfig":"27"},{"size":1140,"mtime":1609299177151,"results":"31","hashOfConfig":"27"},{"size":316,"mtime":1609300474657,"results":"32","hashOfConfig":"27"},{"size":1557,"mtime":1609543168752,"results":"33","hashOfConfig":"27"},{"size":380,"mtime":1609299324064,"results":"34","hashOfConfig":"27"},{"size":1112,"mtime":1609543656881,"results":"35","hashOfConfig":"27"},{"size":1876,"mtime":1609529998124,"results":"36","hashOfConfig":"27"},{"size":1140,"mtime":1609363336825,"results":"37","hashOfConfig":"27"},{"size":320,"mtime":1609529475210,"results":"38","hashOfConfig":"27"},{"size":355,"mtime":1609543194908,"results":"39","hashOfConfig":"27"},{"size":741,"mtime":1609543456641,"results":"40","hashOfConfig":"27"},{"size":116,"mtime":1609888112228,"results":"41","hashOfConfig":"27"},{"size":1676,"mtime":1610063985256,"results":"42","hashOfConfig":"27"},{"size":1155,"mtime":1610073679626,"results":"43","hashOfConfig":"27"},{"size":1241,"mtime":1610073551256,"results":"44","hashOfConfig":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oez3wa",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hu1mng",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["89"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErros from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: any) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No mínimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const erros = getValidationErros(err);\n\n      formRef.current?.setErrors(erros);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"create\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n",["90","91","92","93","94"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\AuthContext.tsx",["95","96"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],{"ruleId":"97","severity":1,"message":"98","line":18,"column":49,"nodeType":"99","messageId":"100","endLine":18,"endColumn":52,"suggestions":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"97","severity":1,"message":"98","line":6,"column":9,"nodeType":"99","messageId":"100","endLine":6,"endColumn":12,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"98","line":15,"column":9,"nodeType":"99","messageId":"100","endLine":15,"endColumn":12,"suggestions":"113"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["114","115"],"lines-around-directive",["116"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["117","118"],["119","120"],{"messageId":"121","fix":"122","desc":"123"},{"messageId":"124","fix":"125","desc":"126"},"padding-line-between-statements",{"messageId":"121","fix":"127","desc":"123"},{"messageId":"124","fix":"128","desc":"126"},{"messageId":"121","fix":"129","desc":"123"},{"messageId":"124","fix":"130","desc":"126"},"suggestUnknown",{"range":"131","text":"132"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"131","text":"133"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"134","text":"132"},{"range":"134","text":"133"},{"range":"135","text":"132"},{"range":"135","text":"133"},[621,624],"unknown","never",[164,167],[278,281]]