[{"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx":"4","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx":"5","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"6","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"7","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"8","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx":"9","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx":"10","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts":"11","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts":"12","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"13","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"14","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx":"16","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts":"17","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\context\\AuthContext.tsx":"18","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts":"19"},{"size":198,"mtime":1609203584151,"results":"20","hashOfConfig":"21"},{"size":182,"mtime":1609203775868,"results":"22","hashOfConfig":"21"},{"size":463,"mtime":1609203115405,"results":"23","hashOfConfig":"21"},{"size":198,"mtime":1609203584151,"results":"24","hashOfConfig":"25"},{"size":346,"mtime":1609887126530,"results":"26","hashOfConfig":"25"},{"size":463,"mtime":1609203115405,"results":"27","hashOfConfig":"25"},{"size":2145,"mtime":1609973222157,"results":"28","hashOfConfig":"25"},{"size":1140,"mtime":1609299177151,"results":"29","hashOfConfig":"25"},{"size":316,"mtime":1609300474657,"results":"30","hashOfConfig":"25"},{"size":1557,"mtime":1609543168752,"results":"31","hashOfConfig":"25"},{"size":380,"mtime":1609299324064,"results":"32","hashOfConfig":"25"},{"size":1112,"mtime":1609543656881,"results":"33","hashOfConfig":"25"},{"size":1876,"mtime":1609529998124,"results":"34","hashOfConfig":"35"},{"size":1140,"mtime":1609363336825,"results":"36","hashOfConfig":"35"},{"size":320,"mtime":1609529475210,"results":"37","hashOfConfig":"25"},{"size":355,"mtime":1609543194908,"results":"38","hashOfConfig":"25"},{"size":741,"mtime":1609543456641,"results":"39","hashOfConfig":"25"},{"size":1271,"mtime":1609974497441,"results":"40","hashOfConfig":"25"},{"size":116,"mtime":1609888112228,"results":"41","hashOfConfig":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oez3wa",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"7edbj7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1hu1mng",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx",[],["84","85","86","87","88"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx",["89"],"import React, { useRef, useCallback, useContext } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErros from '../../utils/getValidationErrors';\nimport { AuthContext } from '../../context/AuthContext';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { user, signIn } = useContext(AuthContext);\n\n  console.log(user);\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        const erros = getValidationErros(err);\n\n        formRef.current?.setErrors(erros);\n      }\n    },\n    [signIn],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu logon</h1>\n\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"forgot\">Esqueci minha senha</a>\n        </Form>\n\n        <a href=\"create\">\n          <FiLogIn />\n          Criar conta\n        </a>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["90"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErros from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: any) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No mínimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const erros = getValidationErros(err);\n\n      formRef.current?.setErrors(erros);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"create\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n",["91","92","93","94","95"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\context\\AuthContext.tsx",["96","97"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":3,"nodeType":"110","messageId":"111","endLine":26,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":18,"column":49,"nodeType":"114","messageId":"115","endLine":18,"endColumn":52,"suggestions":"116"},{"ruleId":"98","replacedBy":"117"},{"ruleId":"100","replacedBy":"118"},{"ruleId":"102","replacedBy":"119"},{"ruleId":"104","replacedBy":"120"},{"ruleId":"106","replacedBy":"121"},{"ruleId":"112","severity":1,"message":"113","line":6,"column":9,"nodeType":"114","messageId":"115","endLine":6,"endColumn":12,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"113","line":15,"column":9,"nodeType":"114","messageId":"115","endLine":15,"endColumn":12,"suggestions":"123"},"lines-around-directive",["124"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["125","126"],["124"],[],[],[],[],["127","128"],["129","130"],"padding-line-between-statements",{"messageId":"131","fix":"132","desc":"133"},{"messageId":"134","fix":"135","desc":"136"},{"messageId":"131","fix":"137","desc":"133"},{"messageId":"134","fix":"138","desc":"136"},{"messageId":"131","fix":"139","desc":"133"},{"messageId":"134","fix":"140","desc":"136"},"suggestUnknown",{"range":"141","text":"142"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"141","text":"143"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"144","text":"142"},{"range":"144","text":"143"},{"range":"145","text":"142"},{"range":"145","text":"143"},[621,624],"unknown","never",[152,155],[266,269]]