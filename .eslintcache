[{"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx":"4","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx":"5","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"6","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"7","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"8","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx":"9","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx":"10","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts":"11","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts":"12","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"13","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"14","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx":"16","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts":"17","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts":"18","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"19","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"20","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx":"21","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx":"22","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx":"23","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"24","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"25"},{"size":198,"mtime":1609203584151,"results":"26","hashOfConfig":"27"},{"size":182,"mtime":1609203775868,"results":"28","hashOfConfig":"27"},{"size":463,"mtime":1609203115405,"results":"29","hashOfConfig":"27"},{"size":198,"mtime":1609203584151,"results":"30","hashOfConfig":"31"},{"size":326,"mtime":1610213200972,"results":"32","hashOfConfig":"31"},{"size":463,"mtime":1609203115405,"results":"33","hashOfConfig":"31"},{"size":2419,"mtime":1610224247257,"results":"34","hashOfConfig":"31"},{"size":1140,"mtime":1609299177151,"results":"35","hashOfConfig":"31"},{"size":316,"mtime":1609300474657,"results":"36","hashOfConfig":"31"},{"size":1557,"mtime":1609543168752,"results":"37","hashOfConfig":"31"},{"size":380,"mtime":1609299324064,"results":"38","hashOfConfig":"31"},{"size":1112,"mtime":1609543656881,"results":"39","hashOfConfig":"31"},{"size":1876,"mtime":1609529998124,"results":"40","hashOfConfig":"31"},{"size":1140,"mtime":1609363336825,"results":"41","hashOfConfig":"31"},{"size":320,"mtime":1609529475210,"results":"42","hashOfConfig":"31"},{"size":355,"mtime":1609543194908,"results":"43","hashOfConfig":"31"},{"size":741,"mtime":1609543456641,"results":"44","hashOfConfig":"31"},{"size":116,"mtime":1609888112228,"results":"45","hashOfConfig":"31"},{"size":784,"mtime":1610296631384,"results":"46","hashOfConfig":"31"},{"size":162,"mtime":1610222824991,"results":"47","hashOfConfig":"31"},{"size":272,"mtime":1610213058697,"results":"48","hashOfConfig":"31"},{"size":1676,"mtime":1610212889207,"results":"49","hashOfConfig":"31"},{"size":1435,"mtime":1610222515898,"results":"50","hashOfConfig":"31"},{"size":1177,"mtime":1610296374309,"results":"51","hashOfConfig":"31"},{"size":1182,"mtime":1610296481725,"results":"52","hashOfConfig":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oez3wa",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1hu1mng",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx",[],["107","108","109","110","111"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["112"],"import React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErros from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: any) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string()\n          .required('E-mail obrigatório')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().min(6, 'No mínimo 6 digitos'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      const erros = getValidationErros(err);\n\n      formRef.current?.setErrors(erros);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu cadastro</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n\n        <a href=\"create\">\n          <FiArrowLeft />\n          Voltar para logon\n        </a>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n",["113","114","115","116","117"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx",["118","119"],"import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: any;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: any;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      return {\n        token,\n        user: JSON.stringify(user),\n      };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProivider');\n  }\n\n  return context;\n}\n","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",["120"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":18,"column":49,"nodeType":"133","messageId":"134","endLine":18,"endColumn":52,"suggestions":"135"},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},{"ruleId":"125","replacedBy":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":9,"nodeType":"133","messageId":"134","endLine":6,"endColumn":12,"suggestions":"141"},{"ruleId":"131","severity":1,"message":"132","line":15,"column":9,"nodeType":"133","messageId":"134","endLine":15,"endColumn":12,"suggestions":"142"},{"ruleId":"131","severity":1,"message":"132","line":15,"column":10,"nodeType":"133","messageId":"134","endLine":15,"endColumn":13,"suggestions":"143"},"lines-around-directive",["144"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["145","146"],["144"],[],[],[],[],["147","148"],["149","150"],["151","152"],"padding-line-between-statements",{"messageId":"153","fix":"154","desc":"155"},{"messageId":"156","fix":"157","desc":"158"},{"messageId":"153","fix":"159","desc":"155"},{"messageId":"156","fix":"160","desc":"158"},{"messageId":"153","fix":"161","desc":"155"},{"messageId":"156","fix":"162","desc":"158"},{"messageId":"153","fix":"163","desc":"155"},{"messageId":"156","fix":"164","desc":"158"},"suggestUnknown",{"range":"165","text":"166"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"165","text":"167"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"168","text":"166"},{"range":"168","text":"167"},{"range":"169","text":"166"},{"range":"169","text":"167"},{"range":"170","text":"166"},{"range":"170","text":"167"},[621,624],"unknown","never",[164,167],[278,281],[294,297]]