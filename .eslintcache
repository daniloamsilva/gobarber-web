[{"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx":"4","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx":"5","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"6","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"7","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"8","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx":"9","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx":"10","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts":"11","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts":"12","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"13","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"14","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx":"16","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts":"17","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts":"18","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"19","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"20","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx":"21","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx":"22","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx":"23","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"24","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"25","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\routes\\index.tsx":"26","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\routes\\Route.tsx":"27","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"28"},{"size":198,"mtime":1609203584151,"results":"29","hashOfConfig":"30"},{"size":182,"mtime":1609203775868,"results":"31","hashOfConfig":"30"},{"size":463,"mtime":1609203115405,"results":"32","hashOfConfig":"30"},{"size":198,"mtime":1609203584151,"results":"33","hashOfConfig":"34"},{"size":352,"mtime":1610298123998,"results":"35","hashOfConfig":"34"},{"size":463,"mtime":1609203115405,"results":"36","hashOfConfig":"34"},{"size":2687,"mtime":1610574659954,"results":"37","hashOfConfig":"34"},{"size":1509,"mtime":1610298486881,"results":"38","hashOfConfig":"34"},{"size":316,"mtime":1609300474657,"results":"39","hashOfConfig":"34"},{"size":1557,"mtime":1609543168752,"results":"40","hashOfConfig":"34"},{"size":380,"mtime":1609299324064,"results":"41","hashOfConfig":"34"},{"size":1112,"mtime":1609543656881,"results":"42","hashOfConfig":"34"},{"size":2749,"mtime":1610574543997,"results":"43","hashOfConfig":"34"},{"size":1510,"mtime":1610298515773,"results":"44","hashOfConfig":"34"},{"size":320,"mtime":1609529475210,"results":"45","hashOfConfig":"34"},{"size":355,"mtime":1609543194908,"results":"46","hashOfConfig":"34"},{"size":741,"mtime":1609543456641,"results":"47","hashOfConfig":"34"},{"size":116,"mtime":1609888112228,"results":"48","hashOfConfig":"34"},{"size":784,"mtime":1610296631384,"results":"49","hashOfConfig":"34"},{"size":162,"mtime":1610222824991,"results":"50","hashOfConfig":"34"},{"size":272,"mtime":1610213058697,"results":"51","hashOfConfig":"34"},{"size":1676,"mtime":1610212889207,"results":"52","hashOfConfig":"34"},{"size":1435,"mtime":1610222515898,"results":"53","hashOfConfig":"34"},{"size":1177,"mtime":1610296374309,"results":"54","hashOfConfig":"34"},{"size":1182,"mtime":1610296481725,"results":"55","hashOfConfig":"34"},{"size":467,"mtime":1610545169576,"results":"56","hashOfConfig":"34"},{"size":802,"mtime":1610545331188,"results":"57","hashOfConfig":"34"},{"size":109,"mtime":1610544321053,"results":"58","hashOfConfig":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oez3wa",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1hu1mng",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\index.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\index.tsx",[],["118","119","120","121","122"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["123"],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx",["124","125"],"import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: any;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: any;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      return {\n        token,\n        user: JSON.stringify(user),\n      };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProivider');\n  }\n\n  return context;\n}\n","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",["126"],"import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: any;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      hasDescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\routes\\Route.tsx",[],"C:\\Users\\danilo\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":26,"column":18,"nodeType":"139","messageId":"140","endLine":26,"endColumn":21,"suggestions":"141"},{"ruleId":"137","severity":1,"message":"138","line":6,"column":9,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"138","line":15,"column":9,"nodeType":"139","messageId":"140","endLine":15,"endColumn":12,"suggestions":"143"},{"ruleId":"137","severity":1,"message":"138","line":15,"column":10,"nodeType":"139","messageId":"140","endLine":15,"endColumn":13,"suggestions":"144"},"lines-around-directive",["145"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["146","147"],["148","149"],["150","151"],["152","153"],"padding-line-between-statements",{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"157","fix":"165","desc":"159"},"suggestUnknown",{"range":"166","text":"167"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"166","text":"168"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"169","text":"167"},{"range":"169","text":"168"},{"range":"170","text":"167"},{"range":"170","text":"168"},{"range":"171","text":"167"},{"range":"171","text":"168"},[852,855],"unknown","never",[164,167],[278,281],[294,297]]