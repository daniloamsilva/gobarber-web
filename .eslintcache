[{"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\index.tsx":"1","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\App.tsx":"2","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts":"3","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx":"4","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\routes\\index.tsx":"5","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx":"6","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx":"7","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\routes\\Route.tsx":"8","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts":"9","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"10","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"11","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"12","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"13","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"14","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts":"15","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"16","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"17","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx":"18","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx":"19","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts":"20","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts":"21","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"22","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts":"23","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx":"24","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts":"25","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx":"26","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts":"27","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx":"28","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts":"29","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\styles.ts":"30","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Profile\\index.tsx":"31","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Profile\\styles.ts":"32"},{"size":208,"mtime":1619481798590,"results":"33","hashOfConfig":"34"},{"size":372,"mtime":1619481798569,"results":"35","hashOfConfig":"34"},{"size":492,"mtime":1619481798597,"results":"36","hashOfConfig":"34"},{"size":284,"mtime":1619481798588,"results":"37","hashOfConfig":"34"},{"size":801,"mtime":1619989597380,"results":"38","hashOfConfig":"34"},{"size":2165,"mtime":1620001801493,"results":"39","hashOfConfig":"34"},{"size":1494,"mtime":1619481798589,"results":"40","hashOfConfig":"34"},{"size":843,"mtime":1619481798595,"results":"41","hashOfConfig":"34"},{"size":123,"mtime":1619481798596,"results":"42","hashOfConfig":"34"},{"size":7395,"mtime":1619989252792,"results":"43","hashOfConfig":"34"},{"size":2701,"mtime":1619482798327,"results":"44","hashOfConfig":"34"},{"size":2852,"mtime":1619481798593,"results":"45","hashOfConfig":"34"},{"size":1599,"mtime":1619481798592,"results":"46","hashOfConfig":"34"},{"size":1506,"mtime":1619989829315,"results":"47","hashOfConfig":"34"},{"size":335,"mtime":1619481798598,"results":"48","hashOfConfig":"34"},{"size":817,"mtime":1619481798585,"results":"49","hashOfConfig":"34"},{"size":171,"mtime":1619481798585,"results":"50","hashOfConfig":"34"},{"size":1678,"mtime":1619990547014,"results":"51","hashOfConfig":"34"},{"size":380,"mtime":1619484462349,"results":"52","hashOfConfig":"34"},{"size":1189,"mtime":1619481798582,"results":"53","hashOfConfig":"34"},{"size":398,"mtime":1619481798580,"results":"54","hashOfConfig":"34"},{"size":1185,"mtime":1619484561222,"results":"55","hashOfConfig":"34"},{"size":1181,"mtime":1619484548192,"results":"56","hashOfConfig":"34"},{"size":374,"mtime":1619481798586,"results":"57","hashOfConfig":"34"},{"size":779,"mtime":1619481798587,"results":"58","hashOfConfig":"34"},{"size":2884,"mtime":1619578823202,"results":"59","hashOfConfig":"34"},{"size":1599,"mtime":1619481798592,"results":"60","hashOfConfig":"34"},{"size":2930,"mtime":1619579239664,"results":"61","hashOfConfig":"34"},{"size":1599,"mtime":1619481798592,"results":"62","hashOfConfig":"34"},{"size":4213,"mtime":1619989374316,"results":"63","hashOfConfig":"34"},{"size":4021,"mtime":1620001742632,"results":"64","hashOfConfig":"34"},{"size":1692,"mtime":1620000922811,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"t7gt5u",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\index.tsx",[],["133","134","135","136","137"],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\App.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\styles\\global.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\routes\\Route.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\services\\api.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["138"],"import React, { useCallback, useRef } from 'react';\r\nimport { FiArrowLeft, FiMail, FiLock, FiUser } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport getValidationErros from '../../utils/getValidationErrors';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\nconst SignUp: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: any) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome obrigatório'),\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await api.post('/users', data);\r\n\r\n        history.push('/');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Cadastro realizado',\r\n          description: 'Você já pode fazer seu logon no GoBarber!',\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const erros = getValidationErros(err);\r\n\r\n          formRef.current?.setErrors(erros);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'info',\r\n          title: 'Erro no cadastro',\r\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Background />\r\n\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Faça seu cadastro</h1>\r\n\r\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Cadastrar</Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiArrowLeft />\r\n            Voltar para logon\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",["139"],"import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: any;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      hasDescription={Number(!!message.description)}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\components\\ToolTip\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Profile\\index.tsx",[],"C:\\Users\\admin\\Documents\\GitHub\\gobarber-web\\src\\pages\\Profile\\styles.ts",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":18,"nodeType":"152","messageId":"153","endLine":26,"endColumn":21,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":15,"column":10,"nodeType":"152","messageId":"153","endLine":15,"endColumn":13,"suggestions":"155"},"lines-around-directive",["156"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["157","158"],["159","160"],"padding-line-between-statements",{"messageId":"161","fix":"162","desc":"163"},{"messageId":"164","fix":"165","desc":"166"},{"messageId":"161","fix":"167","desc":"163"},{"messageId":"164","fix":"168","desc":"166"},"suggestUnknown",{"range":"169","text":"170"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"169","text":"171"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"172","text":"170"},{"range":"172","text":"171"},[877,880],"unknown","never",[294,297]]